create or replace PACKAGE BODY PKG_BATCH_LOG AS

    PROCEDURE P_INS_LOG (LREC_BATCH_LOG  IN OUT  PKG_GLOBAL_REC.GREC_BATCH_LOG) IS
    PRAGMA AUTONOMOUS_TRANSACTION ;
    BEGIN
        SELECT MAX(OPERT_IDX) INTO LREC_BATCH_LOG.OPERT_IDX
        FROM HRD_COM_BATCH_LOG;

        LREC_BATCH_LOG.OPERT_IDX      := NVL(LREC_BATCH_LOG.OPERT_IDX,0) + 1;
        LREC_BATCH_LOG.OPERT_START_DT := NVL(LREC_BATCH_LOG.OPERT_START_DT,SYSDATE);

        INSERT INTO HRD_COM_BATCH_LOG
        (OPERT_IDX      , OPERT_PROGRM_NM, OPERT_DC       ,
         OPERT_PARAMTR  , OPERT_CO       , OPERT_RESULT   ,
         RESULT_MSSAGE  , OPERT_START_DT , OPERT_END_DT   )
        VALUES
        (LREC_BATCH_LOG.OPERT_IDX      , LREC_BATCH_LOG.OPERT_PROGRM_NM, LREC_BATCH_LOG.OPERT_DC       ,
         LREC_BATCH_LOG.OPERT_PARAMTR  , LREC_BATCH_LOG.OPERT_CO       , LREC_BATCH_LOG.OPERT_RESULT   ,
         LREC_BATCH_LOG.RESULT_MSSAGE  , LREC_BATCH_LOG.OPERT_START_DT , LREC_BATCH_LOG.OPERT_END_DT   );

         COMMIT;
    EXCEPTION WHEN OTHERS THEN
        NULL ;
    END P_INS_LOG;

    PROCEDURE P_UPD_LOG (LREC_BATCH_LOG  IN OUT  PKG_GLOBAL_REC.GREC_BATCH_LOG) IS
    PRAGMA AUTONOMOUS_TRANSACTION ;
    BEGIN
        UPDATE HRD_COM_BATCH_LOG
           SET OPERT_CO        = LREC_BATCH_LOG.OPERT_CO       ,
               OPERT_RESULT    = LREC_BATCH_LOG.OPERT_RESULT   ,
               RESULT_MSSAGE   = LREC_BATCH_LOG.RESULT_MSSAGE  ,
               OPERT_END_DT    = NVL(LREC_BATCH_LOG.OPERT_END_DT  , SYSDATE)
        WHERE OPERT_IDX = LREC_BATCH_LOG.OPERT_IDX ;

         COMMIT;
    EXCEPTION WHEN OTHERS THEN
        NULL ;
    END P_UPD_LOG;

    PROCEDURE P_LOG_JAVA (paramOPERT_IDX       IN OUT INTEGER,
                          paramOPERT_PROGRM_NM IN OUT VARCHAR2,
                          paramOPERT_DC        IN OUT VARCHAR2,
                          paramOPERT_PARAMTR   IN OUT VARCHAR2,
                          paramOPERT_CO        IN OUT INTEGER,
                          paramOPERT_RESULT    IN OUT VARCHAR2,
                          paramRESULT_MSSAGE   IN OUT VARCHAR2,
                          paramOPERT_START_DT  IN OUT TIMESTAMP,
                          paramOPERT_END_DT    IN OUT TIMESTAMP ) IS

    LREC_BATCH_LOG    PKG_GLOBAL_REC.GREC_BATCH_LOG;
    BEGIN
        LREC_BATCH_LOG.OPERT_IDX       := paramOPERT_IDX ;
        LREC_BATCH_LOG.OPERT_PROGRM_NM := paramOPERT_PROGRM_NM;
        LREC_BATCH_LOG.OPERT_DC        := paramOPERT_DC ;
        LREC_BATCH_LOG.OPERT_PARAMTR   := paramOPERT_PARAMTR ;
        LREC_BATCH_LOG.OPERT_CO        := paramOPERT_CO ;
        LREC_BATCH_LOG.OPERT_RESULT    := paramOPERT_RESULT ;
        LREC_BATCH_LOG.RESULT_MSSAGE   := paramRESULT_MSSAGE ;
        LREC_BATCH_LOG.OPERT_START_DT  := paramOPERT_START_DT ;
        LREC_BATCH_LOG.OPERT_END_DT    := paramOPERT_END_DT ;

        IF LREC_BATCH_LOG.OPERT_IDX IS NULL OR LREC_BATCH_LOG.OPERT_IDX = 0 THEN
            P_INS_LOG(LREC_BATCH_LOG);
        ELSE
            P_UPD_LOG(LREC_BATCH_LOG);
        END IF;

        paramOPERT_IDX        := LREC_BATCH_LOG.OPERT_IDX       ;
        paramOPERT_PROGRM_NM  := LREC_BATCH_LOG.OPERT_PROGRM_NM ;
        paramOPERT_DC         := LREC_BATCH_LOG.OPERT_DC        ;
        paramOPERT_PARAMTR    := LREC_BATCH_LOG.OPERT_PARAMTR   ;
        paramOPERT_CO         := LREC_BATCH_LOG.OPERT_CO        ;
        paramOPERT_RESULT     := LREC_BATCH_LOG.OPERT_RESULT    ;
        paramRESULT_MSSAGE    := LREC_BATCH_LOG.RESULT_MSSAGE   ;
        paramOPERT_START_DT   := LREC_BATCH_LOG.OPERT_START_DT  ;
        paramOPERT_END_DT     := LREC_BATCH_LOG.OPERT_END_DT    ;        
    END;



END;